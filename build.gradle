buildscript {
    ext.kotlin_version = '1.1.0'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

group 'com.liuwill.kata'
version '1.0-SNAPSHOT'

apply plugin: 'java'
// apply plugin: 'kotlin2js'
apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: 'application'
apply plugin: 'kotlin'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'jacoco'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

mainClassName = 'com.liuwill.kata.DailyKata'

sourceSets{
    main{
        java {srcDir "src/main/java"}
        kotlin {srcDir "src/main/kotlin"}
        resources {srcDir "src/main/resources"}
    }
    test{
        java {srcDir "src/test/java"}
        kotlin {srcDir "src/test/kotlin"}
        resources {srcDir "src/test/resources"}
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.picocontainer/picocontainer
    compile group: 'org.picocontainer', name: 'picocontainer', version: '2.15'

    // https://mvnrepository.com/artifact/org.jmock/jmock
    compile group: 'org.jmock', name: 'jmock', version: '2.8.2'

    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    compile group: 'org.mockito', name: 'mockito-all', version: '2.0.2-beta'

    // https://mvnrepository.com/artifact/info.cukes/cucumber-core
    compile group: 'info.cukes', name: 'cucumber-java', version: '1.2.5'
    compile group: 'info.cukes', name: 'cucumber-jvm', version: '1.2.5'
    compile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.5'
    compile group: 'info.cukes', name: 'cucumber-picocontainer', version: '1.2.5'

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile 'com.google.code.gson:gson:2.8.1'
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    testCompile group: 'junit', name: 'junit', version: '4.12'
    // compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    // compile "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
}

compileKotlin {
    kotlinOptions.suppressWarnings = true
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task createJavaProject {
    doLast {
        sourceSets*.java.srcDirs*.each { it.mkdirs() }
        sourceSets*.kotlin.srcDirs*.each { it.mkdirs() }
        sourceSets*.resources.srcDirs*.each { it.mkdirs()}
    }
}

/*
test {
    //exclude 'com.liuwill.text.tools.*'
    filter {
        //include all integration tests
        includeTestsMatching "*Test"

        //include all tests from package
        includeTestsMatching "com.liuwill.kata.test.*"
    }
}*/

// [ FindBugs Start**/
findbugs{
    ignoreFailures=true
    findbugsTest.enabled=false
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
// ] FindBugs End**/
checkstyle{
    toolVersion = '7.8.2'
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        // html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
    }
    configFile = file('config/checkstyle/checkstyle.xml')
}

jacoco{
    toolVersion = "0.7.9"
    // reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports{
        xml.enabled = true
        html.enabled = true
        // html.destination = "${buildDir}/jacocoHtml"
    }
}

